imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        sitename: "Chat with Models"
        developer_name: "Nikolay Chervyakov"
        developer_email: "nick.chervyakov@gmail.com"
#    form:
#        #resources: ['bootstrap_3_layout.html.twig']
#        resources: ['bootstrap_3_horizontal_layout.html.twig']
    form_themes:
        # other form themes
        - 'VichUploaderBundle:Form:fields.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: true
    bundles:        [ AppBundle ]
    java: ~ # /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

doctrine_migrations:
    dir_name: %kernel.root_dir%/DoctrineMigrations
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

hwi_oauth:
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: secured_area

    # an optional setting to configure a query string parameter which can be used to redirect
    # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
    # redirect the user to /my/destination after facebook authenticates them.  If this is not
    # set then the user will be redirected to the original resource that they requested, or
    # the base address if no resource was requested.  This is similar to the behaviour of
    # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
    # target_path_parameter: _destination

    # an optional setting to use the HTTP REFERER header to be used in case no
    # previous URL was stored in the session (i.e. no resource was requested).
    # This is similar to the behaviour of
    # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
    # use_referer: true

    # here you will add one (or more) configurations for resource owners
    # and other settings you want to adjust in this bundle, just checkout the list below!

    # Set up providers. look here: https://github.com/hwi/HWIOAuthBundle/blob/master/Resources/doc/2-configuring_resource_owners.md

    resource_owners:
        facebook:
            type:               facebook
            client_id:          "%oauth.facebook.client_id%"
            client_secret:      "%oauth.facebook.client_secret%"
            scope:              "email public_profile"
#            options:
#                display: popup #dialog is optimized for popup window

        twitter:
            type:               twitter
            client_id:          "%oauth.twitter.client_id%"
            client_secret:      "%oauth.twitter.client_secret%"

        vkontakte:
            type:               vkontakte
            client_id:          "%oauth.vkontakte.client_id%"
            client_secret:      "%oauth.vkontakte.client_secret%"
            scope:              "email"

        google:
            type:               google
            client_id:          "%oauth.google.client_id%"
            client_secret:      "%oauth.google.client_secret%"
            scope:              "email profile"
#            options:
#                access_type:     offline
#                request_visible_actions: "http://schemas.google.com/AddActivity http://schemas.google.com/CommentActivity"

        github:
            type:               github
            client_id:          "%oauth.github.client_id%"
            client_secret:      "%oauth.github.client_secret%"

    fosub:
        # If CURL throws a certificate error, see here how to solve:
        # https://laracasts.com/discuss/channels/general-discussion/curl-error-60-ssl-certificate-problem-unable-to-get-local-issuer-certificate

        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30

        # mapping between resource owners (see below) and properties
        properties:
            github:     githubId
            google:     googleId
            facebook:   facebookId
            vkontakte:  vkontakteId
            twitter:    twitterId
#            my_custom_provider: customId

    connect: ~
    http_client:
        timeout:       10
        verify_peer:   true
        ignore_errors: true
        max_redirects: 5

fos_user:
    db_driver: orm
    firewall_name: secured_area
    user_class: AppBundle\Entity\User
    group:
        group_class: AppBundle\Entity\Group
    registration:
        form:
            type: user_registration
            validation_groups: [ AppRegistration, Default ]
        confirmation:
            enabled:    false
            #template:   'AppBundle:Registration:email.html.twig'
    profile:
        form:
            type: user_profile
            validation_groups: [ AppProfile, Default ]

fos_js_routing:
    routes_to_expose:
        - homepage
        - chat
        - chat_add_message
        - chat_show
        - chat_get_new_messages
        - user_show
#        - fos_user_registration_register

knp_menu:
#    twig:
#        template: AppBundle:Default:knp_menu.html.twig

#jms_di_extra:
#    locations:
#        all_bundles: false
#        bundles: [ AppBundle ]
#        directories: ["%kernel.root_dir%/../src"]
#
#    automatic_controller_injections:
#        properties:
#            request: "@request"
#            router: "@router"
#
#        method_calls:
#            setRouter: ["@router"]

hautelook_alice:
    locale: en_US   # default
    seed: 1         # default

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr
    mappings:
        user_image:
            uri_prefix:         /uploads/photo
            upload_destination: %kernel.root_dir%/../web/uploads/photo
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

#jms_security_extra:
#    # Whether you want to secure all services (true), or only secure specific
#    # services (false); see also below
#    secure_all_services: false
#
#    # Enabling this setting will add an additional special attribute "ROLE_IDDQD".
#    # Anybody with this attribute will effectively bypass all security checks.
#    enable_iddqd_attribute: false
#
#    # Enables expression language
#    expressions: true
#
#    # Allows you to disable some, or all built-in voters
#    voters:
#        disable_authenticated: false
#        disable_role:          false
#        disable_acl:           false
#
#    # Allows you to specify access control rules for specific methods, such
#    # as controller actions
#    method_access_control: { }
#
#    util:
#        secure_random:
##            connection: # the doctrine connection name
#            table_name: seed_table
##            seed_provider: # service id of your own seed provider implementation

liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        user_photo_thumb:
            quality: 75
            filters:
                thumbnail: { size: [252, 196], mode: outbond }
        user_photo_big:
            quality: 75
            filters:
                thumbnail: { size: [800, 600], mode: outbond, allow_upscale: true }
        user_message_thumb:
            quality: 75
            filters:
                thumbnail: { size: [52, 52], mode: outbond }
