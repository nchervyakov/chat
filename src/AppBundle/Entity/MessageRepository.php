<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{
    /**
     * @param Conversation $conversation
     * @param int $num
     * @param null $beforeMessageId
     * @return Message[]
     */
    public function getConversationLatestMessages(Conversation $conversation, $num = 10, $beforeMessageId = null)
    {
        $qb = $this->createQueryBuilder('m');
        $qb->where('m.conversation = :conversation')->setParameter('conversation', $conversation)
            ->orderBy('m.dateAdded', 'DESC')
            ->setMaxResults($num);

        if (is_numeric($beforeMessageId)) {
            if ($beforeMessageId <= 0) {
                throw new \InvalidArgumentException;
            }

            $qb->andWhere('m.id < :before_message_id')->setParameter('before_message_id', (int)$beforeMessageId);
        }

        return $qb->getQuery()->execute();
    }

    /**
     * @param Conversation $conversation
     * @param int $latestMessageId
     * @return mixed|Message[]
     */
    public function getLatestMessages(Conversation $conversation, $latestMessageId = 0)
    {
        $latestMessageId = (int) $latestMessageId;
        $messages = $this->getEntityManager()
            ->createQuery('SELECT m '
                . 'FROM AppBundle:Message m '
                . 'WHERE m.conversation = :conversation AND m.id > :latest_message_id '
                . 'ORDER BY m.dateAdded')
            ->setParameters([
                'conversation' => $conversation,
                'latest_message_id' => $latestMessageId
            ])
            ->execute();

        return $messages;
    }

    /**
     * @param Conversation $conversation
     * @return Query
     */
    public function createLatestMessagesQuery(Conversation $conversation)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM AppBundle:Message m WHERE m.conversation = :conversation ORDER BY m.dateAdded DESC')
            ->setParameter('conversation', $conversation);
    }
}
